{"version":3,"sources":["components/AppHeader/AppHeader.js","components/ItemStatusFilter/ItemStatusFilter.js","components/SearchPanel/SearchPanel.js","components/TodoList/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","index.js"],"names":["AppHeader","ItemStatusFilter","Component","buttons","name","label","render","this","props","filter","onFilterChange","map","cls","className","key","onClick","SearchPanel","state","term","onSearchChange","e","target","value","setState","type","placeholder","onChange","style","fontWeight","toDo","done","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","notify","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toggleProperty","addItem","text","newItem","deleteItem","idx","findIndex","el","slice","arr","propName","oldItem","searchItems","items","length","toLowerCase","indexOf","filterItems","visibleItems","doneCount","toDoCount","newestOnTop","rtl","pauseOnVisibilityChange","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d5ada171.chunk.js","sourcesContent":["import React from 'react';\nimport './AppHeader.css';\n\nconst AppHeader = () => {\n    return (\n        <h3>My Todo list</h3>\n    )\n};\nexport default AppHeader;","import React, {Component} from 'react';\nimport './ItemStatusFilter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'}\n    ];\n\n    render() {\n\n        const {filter, onFilterChange} = this.props;\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const cls = isActive ? 'btn deep-orange accent-4' : 'btn';\n            return (\n                <button\n                    className={cls}\n                    key={name}\n                    onClick={() => onFilterChange(name)}\n                >{label}</button>\n            )\n        });\n\n\n        return (\n            <div className=\"col s12 m6\">\n                <div className=\"ItemStatusFilter\">\n                    {buttons}\n                </div>\n            </div>\n        )\n    }\n};\n","import React, {Component} from 'react';\nimport './SearchPanel.css';\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        term: '',\n    };\n\n    onSearchChange = (e) => {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onSearchChange(term);\n    };\n\n    render() {\n        const searchText = 'Type here to search';\n        const {filter} = this.props;\n        return (\n            <div className='row'>\n                <div className=\"SearchPanel\">\n                    <div className=\"col s12 m6\">\n                        <input type=\"text\" placeholder={searchText} value={this.state.term}\n                               onChange={this.onSearchChange}/>\n                    </div>\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilterChange={this.props.onFilterChange}\n                    />\n                </div>\n                <div className=\"col s12\">\n                    <span style={{fontWeight: 'bold'}}\n                          className='right-align'>{this.props.toDo} more to do, {this.props.done} done</span>\n                </div>\n            </div>\n        )\n    }\n};\n","import React from 'react';\nimport './TodoListItem.css';\n\nconst TodoListItem = (props) => {\n\n    const {label, onDeleted, onToggleImportant, onToggleDone, done, important} = props;\n\n    let cls = 'TodoListItem collection-item';\n\n    if (done) {\n        cls += ' done';\n    }\n    if (important) {\n        cls += ' important';\n    }\n\n    return (\n        <li className={cls}>\n            <span onClick={onToggleDone}>{label}</span>\n            <span>\n                <button className=\"btn-floating waves-effect waves-light\" onClick={onToggleImportant}><i\n                    className=\"material-icons\">flag</i></button>\n                <button className=\"btn-floating waves-effect waves-light red\"\n                        onClick={onDeleted}>\n                    <i className=\"material-icons\">delete_forever</i>\n                </button>\n                </span>\n        </li>\n    )\n\n};\nexport default TodoListItem;","import React from 'react';\nimport './TodoList.css';\nimport TodoListItem from \"./TodoListItem/TodoListItem\";\n\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\n\n    const elements = todos.map((item) => {\n\n        // В itemProps попадут все свойтва кроме id\n        const {id, ...itemProps} = item;\n\n        return (\n            <TodoListItem key={id}\n                          {...itemProps}\n                // label={item.label}\n                // important={item.important}\n                          onDeleted={() => onDeleted(id)}\n                          onToggleImportant={() => onToggleImportant(id)}\n                          onToggleDone={() => onToggleDone(id)}\n            />\n        )\n    });\n\n    return (\n        <div className='row'>\n            <ul className='collection TodoList'>\n                {elements}\n            </ul>\n        </div>\n\n    )\n};\n\nexport default TodoList;","import React, {Component} from 'react';\nimport './ItemAddForm.css';\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: ''\n        })\n    };\n\n\n    render() {\n        return (\n            <div className='ItemAddForm row'>\n                <form className='valign-wrapper' onSubmit={this.onSubmit}>\n                    <input type=\"text\" className='input-field col s6' onChange={this.onLabelChange}\n                           placeholder=\"What needs to be done\" value={this.state.label}/>\n\n                    <div className=\"col s6 right-align\">\n                        <button className=\"btn waves-effect waves-light\">Add Item\n                            <i className=\"material-icons right\">add</i>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n};\n","import React, {Component} from 'react';\nimport './App.css';\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\nimport TodoList from \"../TodoList/TodoList\";\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('React Learn'),\n            this.createTodoItem('React 2 Learn'),\n            this.createTodoItem('React 3 Learn')\n        ],\n        term: '',\n        filter: 'all'// all, active, done\n    };\n\n\n    createTodoItem(label) {\n        return {\n            label: label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        };\n    };\n\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        // Update Object\n        const oldItem = arr[idx];\n        const newItem = {\n            ...oldItem,\n            [propName]: !oldItem[propName]\n        };\n\n        // construct new array\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n\n    notify = () => toast.error('Please Enter task !', {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n    });\n\n\n    onToggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            };\n        })\n    };\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            };\n        })\n    };\n\n    addItem = (text) => {\n        if (text !== '') {\n            const newItem = this.createTodoItem(text);\n            this.setState(({todoData}) => {\n                const newArray = [...todoData, newItem];\n                return {\n                    todoData: newArray\n                }\n            })\n        } else {\n            this.notify();\n        }\n    };\n\n\n    // Delete Item\n    deleteItem = (id) => {\n\n        this.setState(({todoData}) => {\n            // получаем индекс елемента которого хотим удалить\n            const idx = todoData.findIndex((el) => el.id === id);\n\n            // удаляем елемент (НЕправильный подход - Меняем существующий state)\n            //todoData.splice(idx, 1);\n\n            // удаляем елемент (Правильный подход)\n            // const before = todoData.slice(0, idx);\n            // const after = todoData.slice(idx + 1);\n\n            const newArray = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n\n            return {\n                todoData: newArray\n            }\n        })\n    };\n\n\n    // Search\n    searchItems(items, term) {\n\n        if (term.length === 0) {\n            return items\n        }\n\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\n        })\n    }\n\n    onSearchChange = (term) => {\n        this.setState({term})\n    };\n\n\n    // Filter\n    filterItems(items, filter) {\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'done':\n                return items.filter((item) => item.done);\n            case 'active':\n                return items.filter((item) => !item.done);\n            default:\n                return items;\n        }\n    }\n\n\n    onFilterChange = (filter) =>{\n        this.setState({filter})\n    };\n\n\n    render() {\n        const {todoData, term, filter} = this.state;\n\n        const visibleItems = this.filterItems(this.searchItems(todoData, term), filter);\n\n        // count items done\n        const doneCount = todoData.filter((el) => el.done).length;\n\n        // count all items\n        const toDoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <AppHeader/>\n                        <SearchPanel\n                            toDo={toDoCount}\n                            done={doneCount}\n                            onSearchChange={this.onSearchChange}\n                            filter={filter}\n                            onFilterChange={this.onFilterChange}\n                        />\n                        <TodoList\n                            todos={visibleItems}\n                            onDeleted={this.deleteItem}\n                            onToggleImportant={this.onToggleImportant}\n                            onToggleDone={this.onToggleDone}\n                        />\n                        <ItemAddForm\n                            onItemAdded={this.addItem}\n                        />\n                        <ToastContainer\n                            position=\"top-right\"\n                            autoClose={3000}\n                            hideProgressBar={false}\n                            newestOnTop={false}\n                            closeOnClick\n                            rtl={false}\n                            pauseOnVisibilityChange\n                            draggable\n                            pauseOnHover\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}